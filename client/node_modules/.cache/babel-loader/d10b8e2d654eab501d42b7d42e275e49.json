{"ast":null,"code":"var _jsxFileName = \"/home/elgarhey/development/crwn/src/pages/shop/Shop.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport CollectionPage from '../collections/CollectionPage';\nimport CollectionOverview from '../../components/preview-collection/CollectionOverview';\nimport { useDispatch } from 'react-redux';\nimport { setShopData } from '../../redux/shopSlice';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { getref } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst Shop = () => {\n  const [isloading, setIsloading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    const collections = await fetch(`https://firestore.googleapis.com/v1/projects/crwn-6609a\n\t\t/databases/(default)/documents/collections`);\n    console.log(collections.body.tee()); // const colRef = getref('collections');\n    // colRef.onSnapshot(\n    // \t(snap) => {\n    // \t\tif (!snap.empty) {\n    // \t\t\tlet collections = snap.docs.map((doc) => ({\n    // \t\t\t\tid: doc.id,\n    // \t\t\t\trouteName: doc.data().title.toLowerCase(),\n    // \t\t\t\t...doc.data(),\n    // \t\t\t}));\n    // \t\t\tdispatch(setShopData(collections));\n    // \t\t\tsetIsloading(false);\n    // \t\t}\n    // \t},\n    // \t(err) => {\n    // \t\tconsole.log(`Encountered error: ${err}`);\n    // \t}\n    // );\n  }, [dispatch]);\n  let match = useRouteMatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: match.path,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n      isLoading: isloading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:id`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isloading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/pages/shop/Shop.jsx"],"names":["React","useEffect","useState","CollectionPage","CollectionOverview","useDispatch","setShopData","Route","useRouteMatch","getref","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","Shop","isloading","setIsloading","dispatch","collections","fetch","console","log","body","tee","match","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACN,kBAAD,CAAjD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACP,cAAD,CAA7C;;AAEA,MAAMU,IAAI,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMc,QAAQ,GAAGX,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,YAAY;AACrB,UAAMgB,WAAW,GAAG,MAAMC,KAAK,CAAE;6CAAF,CAA/B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACI,IAAZ,CAAiBC,GAAjB,EAAZ,EAHqB,CAKrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAtBQ,EAsBN,CAACN,QAAD,CAtBM,CAAT;AAuBA,MAAIO,KAAK,GAAGf,aAAa,EAAzB;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAEe,KAAK,CAACC,IAFb;AAGC,IAAA,MAAM,EAAGC,KAAD,iBACP,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEX;AAA1C,OAAyDW,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAQC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACC,IAAK,MAFrB;AAGC,IAAA,MAAM,EAAGC,KAAD,iBACP,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEX;AAAtC,OAAqDW,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD;AAkBA,CA7CD;;AA+CA,eAAeZ,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CollectionPage from '../collections/CollectionPage';\nimport CollectionOverview from '../../components/preview-collection/CollectionOverview';\nimport { useDispatch } from 'react-redux';\nimport { setShopData } from '../../redux/shopSlice';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { getref } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst Shop = () => {\n\tconst [isloading, setIsloading] = useState(true);\n\tconst dispatch = useDispatch();\n\tuseEffect(async () => {\n\t\tconst collections = await fetch(`https://firestore.googleapis.com/v1/projects/crwn-6609a\n\t\t/databases/(default)/documents/collections`);\n\t\tconsole.log(collections.body.tee());\n\n\t\t// const colRef = getref('collections');\n\t\t// colRef.onSnapshot(\n\t\t// \t(snap) => {\n\t\t// \t\tif (!snap.empty) {\n\t\t// \t\t\tlet collections = snap.docs.map((doc) => ({\n\t\t// \t\t\t\tid: doc.id,\n\t\t// \t\t\t\trouteName: doc.data().title.toLowerCase(),\n\t\t// \t\t\t\t...doc.data(),\n\t\t// \t\t\t}));\n\t\t// \t\t\tdispatch(setShopData(collections));\n\t\t// \t\t\tsetIsloading(false);\n\t\t// \t\t}\n\t\t// \t},\n\t\t// \t(err) => {\n\t\t// \t\tconsole.log(`Encountered error: ${err}`);\n\t\t// \t}\n\t\t// );\n\t}, [dispatch]);\n\tlet match = useRouteMatch();\n\treturn (\n\t\t<div>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={match.path}\n\t\t\t\trender={(props) => (\n\t\t\t\t\t<CollectionOverViewWithSpinner isLoading={isloading} {...props} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={`${match.path}/:id`}\n\t\t\t\trender={(props) => (\n\t\t\t\t\t<CollectionPageWithSpinner isLoading={isloading} {...props} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}