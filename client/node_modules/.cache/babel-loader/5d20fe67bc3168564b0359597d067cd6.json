{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore'; //set up firebase google auth\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAxis61vKIv3vTMR8AMAjWwn2QOrnYIwP4',\n  authDomain: 'crwn-6609a.firebaseapp.com',\n  databaseURL: 'https://crwn-6609a.firebaseio.com',\n  projectId: 'crwn-6609a',\n  storageBucket: 'crwn-6609a.appspot.com',\n  messagingSenderId: '706748399415',\n  appId: '1:706748399415:web:c1d4e95630d994ce4c64b2',\n  measurementId: 'G-FGNMY3NYXL'\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = async () => await auth.signInWithPopup(googleProvider);\nexport default firebase;\nexport const createUserProfileDocument = async (user, additionalData) => {\n  if (!user) return;\n  const docRef = firestore.doc(`users/${user.uid}`);\n  const snapShot = await docRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email\n    } = user;\n    const {\n      displayName\n    } = user;\n    const createdAt = new Date().toLocaleString();\n\n    try {\n      await docRef.set({\n        email,\n        createdAt,\n        displayName: displayName || additionalData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return docRef;\n};\nexport const getUserCartRef = async () => {\n  const userId = auth.currentUser.uid;\n  const cartRef = firestore.collection('carts').where('userId', '==', userId);\n  const snapShot = await cartRef.get();\n\n  if (snapShot.empty) {\n    const cartDocRef = await firestore.collection('carts').doc();\n    await cartDocRef.set({\n      userId,\n      cartItems: []\n    });\n    return cartDocRef;\n  } else {\n    return snapShot.docs[0].ref;\n  }\n};\nexport const addcollectionAndDocuments = async (collectionKey, collectionToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  let batch = firestore.batch();\n  collectionToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const getref = collectionKey => firestore.collection(collectionKey);","map":{"version":3,"sources":["/home/elgarhey/development/crwn/client/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","createUserProfileDocument","user","additionalData","docRef","doc","uid","snapShot","get","exists","email","displayName","createdAt","Date","toLocaleString","set","err","console","log","getUserCartRef","userId","currentUser","cartRef","collection","where","empty","cartDocRef","cartItems","docs","ref","addcollectionAndDocuments","collectionKey","collectionToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","getref"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n//set up firebase google auth\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyAxis61vKIv3vTMR8AMAjWwn2QOrnYIwP4',\n\tauthDomain: 'crwn-6609a.firebaseapp.com',\n\tdatabaseURL: 'https://crwn-6609a.firebaseio.com',\n\tprojectId: 'crwn-6609a',\n\tstorageBucket: 'crwn-6609a.appspot.com',\n\tmessagingSenderId: '706748399415',\n\tappId: '1:706748399415:web:c1d4e95630d994ce4c64b2',\n\tmeasurementId: 'G-FGNMY3NYXL',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = async () =>\n\tawait auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n\nexport const createUserProfileDocument = async (user, additionalData) => {\n\tif (!user) return;\n\tconst docRef = firestore.doc(`users/${user.uid}`);\n\tconst snapShot = await docRef.get();\n\n\tif (!snapShot.exists) {\n\t\tconst { email } = user;\n\t\tconst { displayName } = user;\n\n\t\tconst createdAt = new Date().toLocaleString();\n\n\t\ttry {\n\t\t\tawait docRef.set({\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\tdisplayName: displayName || additionalData,\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\treturn docRef;\n};\n\nexport const getUserCartRef = async () => {\n\tconst userId = auth.currentUser.uid;\n\tconst cartRef = firestore.collection('carts').where('userId', '==', userId);\n\tconst snapShot = await cartRef.get();\n\n\tif (snapShot.empty) {\n\t\tconst cartDocRef = await firestore.collection('carts').doc();\n\t\tawait cartDocRef.set({\n\t\t\tuserId,\n\t\t\tcartItems: [],\n\t\t});\n\n\t\treturn cartDocRef;\n\t} else {\n\t\treturn snapShot.docs[0].ref;\n\t}\n};\nexport const addcollectionAndDocuments = async (\n\tcollectionKey,\n\tcollectionToAdd\n) => {\n\tconst collectionRef = firestore.collection(collectionKey);\n\tlet batch = firestore.batch();\n\tcollectionToAdd.forEach((obj) => {\n\t\tconst newDocRef = collectionRef.doc();\n\t\tbatch.set(newDocRef, obj);\n\t});\n\treturn await batch.commit();\n};\nexport const getref = (collectionKey) => firestore.collection(collectionKey);\n"]},"metadata":{},"sourceType":"module"}