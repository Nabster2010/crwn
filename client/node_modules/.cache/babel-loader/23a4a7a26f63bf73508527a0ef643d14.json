{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { signInWithGoogle, createUserProfileDocument } from '../firebase/firebase.utils';\nimport firebase, { auth } from 'firebase';\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null,\n    error: null\n  },\n  reducers: {\n    SET_CURRENT_USER: (state, action) => {\n      state.currentUser = action.payload;\n    },\n    GOOGLE_SIGNIN_SUCCESS: (state, action) => {\n      state.currentUser = action.payload;\n      state.error = null;\n    },\n    EMAIL_SIGNIN_SUCCESS: (state, action) => {\n      state.currentUser = action.payload;\n      state.error = null;\n    },\n    SIGNUP_SUCCESS: (state, action) => {\n      state.currentUser = action.payload;\n      state.error = null;\n    },\n    GOOGLE_SIGNIN_FALURE: (state, action) => {\n      state.currentUser = null;\n      state.error = action.payload;\n    },\n    SIGNUP_FAILURE: (state, action) => {\n      state.currentUser = null;\n      state.error = action.payload;\n    },\n    SIGN_OUT: state => {\n      state.currentUser = null;\n      state.error = null;\n    }\n  }\n});\nexport const {\n  SET_CURRENT_USER,\n  GOOGLE_SIGNIN_SUCCESS,\n  GOOGLE_SIGNIN_FALURE,\n  SIGN_OUT,\n  SIGNUP_FAILURE,\n  SIGNUP_SUCCESS,\n  EMAIL_SIGNIN_SUCCESS\n} = userSlice.actions;\nexport default userSlice.reducer;\nexport const googleSignin = () => async dispatch => {\n  try {\n    const {\n      user\n    } = await signInWithGoogle();\n    const docRef = await createUserProfileDocument(user);\n    const snap = await docRef.get();\n    dispatch(GOOGLE_SIGNIN_SUCCESS({\n      id: snap.id,\n      ...snap.data()\n    }));\n  } catch (err) {\n    dispatch(GOOGLE_SIGNIN_FALURE(err.message));\n  }\n};\nexport const signOut = () => async dispatch => {\n  try {\n    await auth.signOut;\n    dispatch(SIGN_OUT());\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const signinEmailPassword = credintials => async dispatch => {\n  const {\n    email,\n    password\n  } = credintials;\n\n  try {\n    const {\n      user\n    } = await auth().signInWithEmailAndPassword(email, password);\n    console.log(user);\n    dispatch(EMAIL_SIGNIN_SUCCESS(user));\n    console.log(user);\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const signUp = formData => async dispatch => {\n  const {\n    displayName,\n    email,\n    password\n  } = formData;\n\n  try {\n    const {\n      user\n    } = await auth().createUserWithEmailAndPassword(email, password);\n    const userRef = await createUserProfileDocument(user, {\n      displayName\n    });\n    const snap = await userRef.get();\n    dispatch(SIGNUP_SUCCESS({\n      id: snap.id,\n      ...snap.data()\n    }));\n  } catch (err) {\n    dispatch(SIGNUP_FAILURE(err.message));\n  }\n};","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/redux/userSlice.js"],"names":["createSlice","signInWithGoogle","createUserProfileDocument","firebase","auth","userSlice","name","initialState","currentUser","error","reducers","SET_CURRENT_USER","state","action","payload","GOOGLE_SIGNIN_SUCCESS","EMAIL_SIGNIN_SUCCESS","SIGNUP_SUCCESS","GOOGLE_SIGNIN_FALURE","SIGNUP_FAILURE","SIGN_OUT","actions","reducer","googleSignin","dispatch","user","docRef","snap","get","id","data","err","message","signOut","console","log","signinEmailPassword","credintials","email","password","signInWithEmailAndPassword","signUp","formData","displayName","createUserWithEmailAndPassword","userRef"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {\n\tsignInWithGoogle,\n\tcreateUserProfileDocument,\n} from '../firebase/firebase.utils';\nimport firebase, { auth } from 'firebase';\n\nexport const userSlice = createSlice({\n\tname: 'user',\n\tinitialState: {\n\t\tcurrentUser: null,\n\t\terror: null,\n\t},\n\treducers: {\n\t\tSET_CURRENT_USER: (state, action) => {\n\t\t\tstate.currentUser = action.payload;\n\t\t},\n\t\tGOOGLE_SIGNIN_SUCCESS: (state, action) => {\n\t\t\tstate.currentUser = action.payload;\n\t\t\tstate.error = null;\n\t\t},\n\t\tEMAIL_SIGNIN_SUCCESS: (state, action) => {\n\t\t\tstate.currentUser = action.payload;\n\t\t\tstate.error = null;\n\t\t},\n\t\tSIGNUP_SUCCESS: (state, action) => {\n\t\t\tstate.currentUser = action.payload;\n\t\t\tstate.error = null;\n\t\t},\n\t\tGOOGLE_SIGNIN_FALURE: (state, action) => {\n\t\t\tstate.currentUser = null;\n\t\t\tstate.error = action.payload;\n\t\t},\n\t\tSIGNUP_FAILURE: (state, action) => {\n\t\t\tstate.currentUser = null;\n\t\t\tstate.error = action.payload;\n\t\t},\n\t\tSIGN_OUT: (state) => {\n\t\t\tstate.currentUser = null;\n\t\t\tstate.error = null;\n\t\t},\n\t},\n});\nexport const {\n\tSET_CURRENT_USER,\n\tGOOGLE_SIGNIN_SUCCESS,\n\tGOOGLE_SIGNIN_FALURE,\n\tSIGN_OUT,\n\tSIGNUP_FAILURE,\n\tSIGNUP_SUCCESS,\n\tEMAIL_SIGNIN_SUCCESS,\n} = userSlice.actions;\nexport default userSlice.reducer;\n\nexport const googleSignin = () => async (dispatch) => {\n\ttry {\n\t\tconst { user } = await signInWithGoogle();\n\t\tconst docRef = await createUserProfileDocument(user);\n\t\tconst snap = await docRef.get();\n\t\tdispatch(GOOGLE_SIGNIN_SUCCESS({ id: snap.id, ...snap.data() }));\n\t} catch (err) {\n\t\tdispatch(GOOGLE_SIGNIN_FALURE(err.message));\n\t}\n};\nexport const signOut = () => async (dispatch) => {\n\ttry {\n\t\tawait auth.signOut;\n\t\tdispatch(SIGN_OUT());\n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t}\n};\n\nexport const signinEmailPassword = (credintials) => async (dispatch) => {\n\tconst { email, password } = credintials;\n\n\ttry {\n\t\tconst { user } = await auth().signInWithEmailAndPassword(email, password);\n\t\tconsole.log(user);\n\n\t\tdispatch(EMAIL_SIGNIN_SUCCESS(user));\n\t\tconsole.log(user);\n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t}\n};\n\nexport const signUp = (formData) => async (dispatch) => {\n\tconst { displayName, email, password } = formData;\n\ttry {\n\t\tconst { user } = await auth().createUserWithEmailAndPassword(\n\t\t\temail,\n\t\t\tpassword\n\t\t);\n\t\tconst userRef = await createUserProfileDocument(user, { displayName });\n\t\tconst snap = await userRef.get();\n\t\tdispatch(SIGNUP_SUCCESS({ id: snap.id, ...snap.data() }));\n\t} catch (err) {\n\t\tdispatch(SIGNUP_FAILURE(err.message));\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}