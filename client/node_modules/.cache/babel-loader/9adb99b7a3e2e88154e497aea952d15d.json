{"ast":null,"code":"export const addItem = (newItem, cartItems) => {\n  const existingItem = cartItems.find(item => item.id === newItem.id);\n\n  if (existingItem) {\n    return cartItems.map(item => item.id === newItem.id ? { ...item,\n      quantity: Number(item.quantity + 1)\n    } : item);\n  } else {\n    return [...cartItems, { ...newItem,\n      quantity: Number(1)\n    }];\n  }\n};\nexport const getQuantity = cartItems => cartItems.reduce((total, item) => total + item.quantity, 0);\nexport const getTotal = cartItems => cartItems.reduce((total, item) => total + item.quantity * item.price, 0);","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/utils.js"],"names":["addItem","newItem","cartItems","existingItem","find","item","id","map","quantity","Number","getQuantity","reduce","total","getTotal","price"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;AAC9C,QAAMC,YAAY,GAAGD,SAAS,CAACE,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;;AACA,MAAIH,YAAJ,EAAkB;AACjB,WAAOD,SAAS,CAACK,GAAV,CAAeF,IAAD,IACpBA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAApB,GACG,EAAE,GAAGD,IAAL;AAAWG,MAAAA,QAAQ,EAAEC,MAAM,CAACJ,IAAI,CAACG,QAAL,GAAgB,CAAjB;AAA3B,KADH,GAEGH,IAHG,CAAP;AAKA,GAND,MAMO;AACN,WAAO,CAAC,GAAGH,SAAJ,EAAe,EAAE,GAAGD,OAAL;AAAcO,MAAAA,QAAQ,EAAEC,MAAM,CAAC,CAAD;AAA9B,KAAf,CAAP;AACA;AACD,CAXM;AAaP,OAAO,MAAMC,WAAW,GAAIR,SAAD,IAC1BA,SAAS,CAACS,MAAV,CAAiB,CAACC,KAAD,EAAQP,IAAR,KAAiBO,KAAK,GAAGP,IAAI,CAACG,QAA/C,EAAyD,CAAzD,CADM;AAEP,OAAO,MAAMK,QAAQ,GAAIX,SAAD,IACvBA,SAAS,CAACS,MAAV,CAAiB,CAACC,KAAD,EAAQP,IAAR,KAAiBO,KAAK,GAAGP,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACS,KAA/D,EAAsE,CAAtE,CADM","sourcesContent":["export const addItem = (newItem, cartItems) => {\n\tconst existingItem = cartItems.find((item) => item.id === newItem.id);\n\tif (existingItem) {\n\t\treturn cartItems.map((item) =>\n\t\t\titem.id === newItem.id\n\t\t\t\t? { ...item, quantity: Number(item.quantity + 1) }\n\t\t\t\t: item\n\t\t);\n\t} else {\n\t\treturn [...cartItems, { ...newItem, quantity: Number(1) }];\n\t}\n};\n\nexport const getQuantity = (cartItems) =>\n\tcartItems.reduce((total, item) => total + item.quantity, 0);\nexport const getTotal = (cartItems) =>\n\tcartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n"]},"metadata":{},"sourceType":"module"}