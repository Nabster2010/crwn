{"ast":null,"code":"var _jsxFileName = \"/home/elgarhey/development/crwn/src/pages/shop/Shop.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport CollectionPage from '../collections/CollectionPage';\nimport CollectionOverview from '../../components/preview-collection/CollectionOverview';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShopData } from '../../redux/shopSlice';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { getref } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst Shop = () => {\n  const {\n    loading\n  } = useSelector(state => state.shop);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const colRef = getref('collections');\n    // colRef.onSnapshot(\n    // \t(snap) => {\n    // \t\tif (!snap.empty) {\n    // \t\t\tlet collections = snap.docs.map((doc) => ({\n    // \t\t\t\tid: doc.id,\n    // \t\t\t\trouteName: doc.data().title.toLowerCase(),\n    // \t\t\t\t...doc.data(),\n    // \t\t\t}));\n    // \t\t\tdispatch(setShopData(collections));\n    // \t\t\tsetIsloading(false);\n    // \t\t}\n    // \t},\n    // \t(err) => {\n    // \t\tconsole.log(`Encountered error: ${err}`);\n    // \t}\n    // );\n    dispatch(setShopData());\n  }, [dispatch]);\n  let match = useRouteMatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: match.path,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}/:id`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Shop;","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/pages/shop/Shop.jsx"],"names":["React","useEffect","useState","CollectionPage","CollectionOverview","useDispatch","useSelector","setShopData","Route","useRouteMatch","getref","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","Shop","loading","state","shop","dispatch","match","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,MAAT,QAAuB,+BAAvB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACR,cAAD,CAA7C;;AAEA,MAAMW,IAAI,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAcT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/B;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAiB,IAAAA,QAAQ,CAACX,WAAW,EAAZ,CAAR;AACA,GAnBQ,EAmBN,CAACW,QAAD,CAnBM,CAAT;AAoBA,MAAIC,KAAK,GAAGV,aAAa,EAAzB;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAEU,KAAK,CAACC,IAFb;AAGC,IAAA,MAAM,EAAGC,KAAD,iBACP,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEN;AAA1C,OAAuDM,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAQC,oBAAC,KAAD;AACC,IAAA,KAAK,MADN;AAEC,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACC,IAAK,MAFrB;AAGC,IAAA,MAAM,EAAGC,KAAD,iBACP,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEN;AAAtC,OAAmDM,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD;AAkBA,CA1CD;;AA4CA,eAAeP,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CollectionPage from '../collections/CollectionPage';\nimport CollectionOverview from '../../components/preview-collection/CollectionOverview';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShopData } from '../../redux/shopSlice';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { getref } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst Shop = () => {\n\tconst { loading } = useSelector((state) => state.shop);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\t// const colRef = getref('collections');\n\t\t// colRef.onSnapshot(\n\t\t// \t(snap) => {\n\t\t// \t\tif (!snap.empty) {\n\t\t// \t\t\tlet collections = snap.docs.map((doc) => ({\n\t\t// \t\t\t\tid: doc.id,\n\t\t// \t\t\t\trouteName: doc.data().title.toLowerCase(),\n\t\t// \t\t\t\t...doc.data(),\n\t\t// \t\t\t}));\n\t\t// \t\t\tdispatch(setShopData(collections));\n\t\t// \t\t\tsetIsloading(false);\n\t\t// \t\t}\n\t\t// \t},\n\t\t// \t(err) => {\n\t\t// \t\tconsole.log(`Encountered error: ${err}`);\n\t\t// \t}\n\t\t// );\n\t\tdispatch(setShopData());\n\t}, [dispatch]);\n\tlet match = useRouteMatch();\n\treturn (\n\t\t<div>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={match.path}\n\t\t\t\trender={(props) => (\n\t\t\t\t\t<CollectionOverViewWithSpinner isLoading={loading} {...props} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={`${match.path}/:id`}\n\t\t\t\trender={(props) => (\n\t\t\t\t\t<CollectionPageWithSpinner isLoading={loading} {...props} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}