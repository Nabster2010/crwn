{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../redux/userSlice';\nimport cartReducer from '../redux/cartSlice';\nimport directoryReducer from '../redux/directorySlice';\nimport shopReducer from '../redux/shopSlice';\nimport { combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart', 'directory', 'shop']\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = configureStore({\n  reducer: persistedReducer\n});\nlet persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/app/store.js"],"names":["configureStore","userReducer","cartReducer","directoryReducer","shopReducer","combineReducers","persistStore","persistReducer","storage","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop","persistedReducer","store","reducer","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,MADgB;AAErBF,EAAAA,OAFqB;AAGrBG,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,WAAT,EAAsB,MAAtB;AAHU,CAAtB;AAKA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AACnCQ,EAAAA,IAAI,EAAEZ,WAD6B;AAEnCa,EAAAA,IAAI,EAAEZ,WAF6B;AAGnCa,EAAAA,SAAS,EAAEZ,gBAHwB;AAInCa,EAAAA,IAAI,EAAEZ;AAJ6B,CAAD,CAAnC;AAMA,MAAMa,gBAAgB,GAAGV,cAAc,CAACE,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,IAAIM,KAAK,GAAGlB,cAAc,CAAC;AAC1BmB,EAAAA,OAAO,EAAEF;AADiB,CAAD,CAA1B;AAGA,IAAIG,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA5B;AACA,SAASA,KAAT,EAAgBE,SAAhB","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../redux/userSlice';\nimport cartReducer from '../redux/cartSlice';\nimport directoryReducer from '../redux/directorySlice';\nimport shopReducer from '../redux/shopSlice';\nimport { combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n\twhitelist: ['cart', 'directory', 'shop'],\n};\nconst rootReducer = combineReducers({\n\tuser: userReducer,\n\tcart: cartReducer,\n\tdirectory: directoryReducer,\n\tshop: shopReducer,\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store = configureStore({\n\treducer: persistedReducer,\n});\nlet persistor = persistStore(store);\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}