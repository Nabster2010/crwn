{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { firestore } from '../firebase/firebase.utils';\nconst initialState = {\n  loading: false,\n  error: '',\n  collections: []\n};\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState: initialState,\n  reducers: {\n    FETCH_COLLECTION_START: state => {\n      state.loading = true;\n    },\n    FETCH_COLLECTION_SUCCESS: () => {},\n    FETCH_COLLECTION_FAILURE: () => {}\n  }\n});\nexport default shopSlice.reducer;\nexport const {} = shopSlice.actions;\nexport const setShopData = () => dispatch => {\n  dispatch({\n    type: FETCH_COLLECTION_START\n  });\n  const colRef = firestore.collection('collections');\n  colRef.onSnapshot(snap => {\n    if (!snap.empty) {\n      let documents = snap.docs.map(doc => ({\n        id: doc.id,\n        routeName: doc.data().title.toLowerCase(),\n        ...doc.data()\n      }));\n      dispatch({\n        type: FETCH_COLLECTION_SUCCESS,\n        payload: documents\n      });\n    }\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n    dispatch({\n      type: FETCH_COLLECTION_FAILURE\n    });\n  });\n};","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/redux/shopSlice.js"],"names":["createSlice","firestore","initialState","loading","error","collections","shopSlice","name","reducers","FETCH_COLLECTION_START","state","FETCH_COLLECTION_SUCCESS","FETCH_COLLECTION_FAILURE","reducer","actions","setShopData","dispatch","type","colRef","collection","onSnapshot","snap","empty","documents","docs","map","doc","id","routeName","data","title","toLowerCase","payload","err","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,KADW;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,WAAW,EAAE;AAHO,CAArB;AAMA,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;AACpCO,EAAAA,IAAI,EAAE,MAD8B;AAEpCL,EAAAA,YAAY,EAAEA,YAFsB;AAGpCM,EAAAA,QAAQ,EAAE;AACTC,IAAAA,sBAAsB,EAAGC,KAAD,IAAW;AAClCA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACA,KAHQ;AAITQ,IAAAA,wBAAwB,EAAE,MAAM,CAAE,CAJzB;AAKTC,IAAAA,wBAAwB,EAAE,MAAM,CAAE;AALzB;AAH0B,CAAD,CAA7B;AAYP,eAAeN,SAAS,CAACO,OAAzB;AACA,OAAO,MAAM,KAAKP,SAAS,CAACQ,OAArB;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AACRC,IAAAA,IAAI,EAAER;AADE,GAAD,CAAR;AAGA,QAAMS,MAAM,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAAf;AACAD,EAAAA,MAAM,CAACE,UAAP,CACEC,IAAD,IAAU;AACT,QAAI,CAACA,IAAI,CAACC,KAAV,EAAiB;AAChB,UAAIC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAeC,GAAD,KAAU;AACvCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EAD+B;AAEvCC,QAAAA,SAAS,EAAEF,GAAG,CAACG,IAAJ,GAAWC,KAAX,CAAiBC,WAAjB,EAF4B;AAGvC,WAAGL,GAAG,CAACG,IAAJ;AAHoC,OAAV,CAAd,CAAhB;AAKAb,MAAAA,QAAQ,CAAC;AACRC,QAAAA,IAAI,EAAEN,wBADE;AAERqB,QAAAA,OAAO,EAAET;AAFD,OAAD,CAAR;AAIA;AACD,GAbF,EAcEU,GAAD,IAAS;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBF,GAAI,EAAtC;AACAjB,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAR;AAGA,GAnBF;AAqBA,CA1BM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { firestore } from '../firebase/firebase.utils';\nconst initialState = {\n\tloading: false,\n\terror: '',\n\tcollections: [],\n};\n\nexport const shopSlice = createSlice({\n\tname: 'shop',\n\tinitialState: initialState,\n\treducers: {\n\t\tFETCH_COLLECTION_START: (state) => {\n\t\t\tstate.loading = true;\n\t\t},\n\t\tFETCH_COLLECTION_SUCCESS: () => {},\n\t\tFETCH_COLLECTION_FAILURE: () => {},\n\t},\n});\n\nexport default shopSlice.reducer;\nexport const {} = shopSlice.actions;\n\nexport const setShopData = () => (dispatch) => {\n\tdispatch({\n\t\ttype: FETCH_COLLECTION_START,\n\t});\n\tconst colRef = firestore.collection('collections');\n\tcolRef.onSnapshot(\n\t\t(snap) => {\n\t\t\tif (!snap.empty) {\n\t\t\t\tlet documents = snap.docs.map((doc) => ({\n\t\t\t\t\tid: doc.id,\n\t\t\t\t\trouteName: doc.data().title.toLowerCase(),\n\t\t\t\t\t...doc.data(),\n\t\t\t\t}));\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: FETCH_COLLECTION_SUCCESS,\n\t\t\t\t\tpayload: documents,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t(err) => {\n\t\t\tconsole.log(`Encountered error: ${err}`);\n\t\t\tdispatch({\n\t\t\t\ttype: FETCH_COLLECTION_FAILURE,\n\t\t\t});\n\t\t}\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}