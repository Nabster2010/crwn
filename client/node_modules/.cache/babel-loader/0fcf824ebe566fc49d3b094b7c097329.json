{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getref } from '../firebase/firebase.utils';\nconst initialState = {\n  loading: false,\n  collections: []\n};\nexport const shopSlice = createSlice({\n  name: 'shop',\n  initialState: initialState,\n  reducers: {\n    FETCH_COLLECTION: (state, action) => {\n      state.loading = true; //\tstate.collections = action.payload;\n    },\n    FETCH_COLLECTION_SUCCESS: () => {},\n    FETCH_COLLECTION_FAILURE: () => {}\n  }\n});\nexport default shopSlice.reducer;\nexport const {} = shopSlice.actions;\nexport const setShopData = collections => async dispatch => {\n  const colRef = getref('collections');\n  colRef.onSnapshot(snap => {\n    if (!snap.empty) {\n      let collections = snap.docs.map(doc => ({\n        id: doc.id,\n        routeName: doc.data().title.toLowerCase(),\n        ...doc.data()\n      }));\n      dispatch(setShopData(collections));\n      setIsloading(false);\n    }\n  }, err => {\n    console.log(`Encountered error: ${err}`);\n  });\n};","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/redux/shopSlice.js"],"names":["createSlice","getref","initialState","loading","collections","shopSlice","name","reducers","FETCH_COLLECTION","state","action","FETCH_COLLECTION_SUCCESS","FETCH_COLLECTION_FAILURE","reducer","actions","setShopData","dispatch","colRef","onSnapshot","snap","empty","docs","map","doc","id","routeName","data","title","toLowerCase","setIsloading","err","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,KADW;AAEpBC,EAAAA,WAAW,EAAE;AAFO,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,MAD8B;AAEpCJ,EAAAA,YAAY,EAAEA,YAFsB;AAGpCK,EAAAA,QAAQ,EAAE;AACTC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB,CADoC,CAEpC;AACA,KAJQ;AAKTQ,IAAAA,wBAAwB,EAAE,MAAM,CAAE,CALzB;AAMTC,IAAAA,wBAAwB,EAAE,MAAM,CAAE;AANzB;AAH0B,CAAD,CAA7B;AAaP,eAAeP,SAAS,CAACQ,OAAzB;AACA,OAAO,MAAM,KAAKR,SAAS,CAACS,OAArB;AAEP,OAAO,MAAMC,WAAW,GAAIX,WAAD,IAAiB,MAAOY,QAAP,IAAoB;AAC/D,QAAMC,MAAM,GAAGhB,MAAM,CAAC,aAAD,CAArB;AACAgB,EAAAA,MAAM,CAACC,UAAP,CACEC,IAAD,IAAU;AACT,QAAI,CAACA,IAAI,CAACC,KAAV,EAAiB;AAChB,UAAIhB,WAAW,GAAGe,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAeC,GAAD,KAAU;AACzCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADiC;AAEzCC,QAAAA,SAAS,EAAEF,GAAG,CAACG,IAAJ,GAAWC,KAAX,CAAiBC,WAAjB,EAF8B;AAGzC,WAAGL,GAAG,CAACG,IAAJ;AAHsC,OAAV,CAAd,CAAlB;AAKAV,MAAAA,QAAQ,CAACD,WAAW,CAACX,WAAD,CAAZ,CAAR;AACAyB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD,GAXF,EAYEC,GAAD,IAAS;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBF,GAAI,EAAtC;AACA,GAdF;AAgBA,CAlBM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getref } from '../firebase/firebase.utils';\nconst initialState = {\n\tloading: false,\n\tcollections: [],\n};\n\nexport const shopSlice = createSlice({\n\tname: 'shop',\n\tinitialState: initialState,\n\treducers: {\n\t\tFETCH_COLLECTION: (state, action) => {\n\t\t\tstate.loading = true;\n\t\t\t//\tstate.collections = action.payload;\n\t\t},\n\t\tFETCH_COLLECTION_SUCCESS: () => {},\n\t\tFETCH_COLLECTION_FAILURE: () => {},\n\t},\n});\n\nexport default shopSlice.reducer;\nexport const {} = shopSlice.actions;\n\nexport const setShopData = (collections) => async (dispatch) => {\n\tconst colRef = getref('collections');\n\tcolRef.onSnapshot(\n\t\t(snap) => {\n\t\t\tif (!snap.empty) {\n\t\t\t\tlet collections = snap.docs.map((doc) => ({\n\t\t\t\t\tid: doc.id,\n\t\t\t\t\trouteName: doc.data().title.toLowerCase(),\n\t\t\t\t\t...doc.data(),\n\t\t\t\t}));\n\t\t\t\tdispatch(setShopData(collections));\n\t\t\t\tsetIsloading(false);\n\t\t\t}\n\t\t},\n\t\t(err) => {\n\t\t\tconsole.log(`Encountered error: ${err}`);\n\t\t}\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}