{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { signInWithGoogle, createUserProfileDocument } from '../firebase/firebase.utils';\nimport { auth } from 'firebase';\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null,\n    error: null\n  },\n  reducers: {\n    SET_CURRENT_USER: (state, action) => {\n      state.currentUser = action.payload;\n    },\n    GOOGLE_SIGNIN_SUCCESS: (state, action) => {\n      state.currentUser = action.payload;\n      state.error = null;\n    },\n    GOOGLE_SIGNIN_FALURE: (state, action) => {\n      state.currentUser = null;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  SET_CURRENT_USER,\n  GOOGLE_SIGNIN_SUCCESS,\n  GOOGLE_SIGNIN_FALURE\n} = userSlice.actions;\nexport default userSlice.reducer;\nexport const googleSignin = () => async dispatch => {\n  try {\n    const {\n      user\n    } = await signInWithGoogle();\n    const docRef = await createUserProfileDocument(user);\n    const snap = await docRef.get();\n    dispatch(GOOGLE_SIGNIN_SUCCESS({\n      id: snap.id,\n      ...snap.data()\n    }));\n  } catch (err) {\n    dispatch(GOOGLE_SIGNIN_FALURE(err.message));\n  }\n};\nexport const signOut = () => async dispatch => {\n  try {\n    await auth.signOut();\n    dispatch(SIGN_OUT());\n  } catch (err) {\n    console.log(err.message);\n  }\n};","map":{"version":3,"sources":["/home/elgarhey/development/crwn/src/redux/userSlice.js"],"names":["createSlice","signInWithGoogle","createUserProfileDocument","auth","userSlice","name","initialState","currentUser","error","reducers","SET_CURRENT_USER","state","action","payload","GOOGLE_SIGNIN_SUCCESS","GOOGLE_SIGNIN_FALURE","actions","reducer","googleSignin","dispatch","user","docRef","snap","get","id","data","err","message","signOut","SIGN_OUT","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SACCC,gBADD,EAECC,yBAFD,QAGO,4BAHP;AAIA,SAASC,IAAT,QAAqB,UAArB;AAEA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AACpCK,EAAAA,IAAI,EAAE,MAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACbC,IAAAA,WAAW,EAAE,IADA;AAEbC,IAAAA,KAAK,EAAE;AAFM,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACA,KAHQ;AAITC,IAAAA,qBAAqB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;AACAF,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACA,KAPQ;AAQTO,IAAAA,oBAAoB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACJ,WAAN,GAAoB,IAApB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACA;AAXQ;AAN0B,CAAD,CAA7B;AAoBP,OAAO,MAAM;AACZH,EAAAA,gBADY;AAEZI,EAAAA,qBAFY;AAGZC,EAAAA;AAHY,IAITX,SAAS,CAACY,OAJP;AAKP,eAAeZ,SAAS,CAACa,OAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,gBAAgB,EAAvC;AACA,UAAMoB,MAAM,GAAG,MAAMnB,yBAAyB,CAACkB,IAAD,CAA9C;AACA,UAAME,IAAI,GAAG,MAAMD,MAAM,CAACE,GAAP,EAAnB;AACAJ,IAAAA,QAAQ,CAACL,qBAAqB,CAAC;AAAEU,MAAAA,EAAE,EAAEF,IAAI,CAACE,EAAX;AAAe,SAAGF,IAAI,CAACG,IAAL;AAAlB,KAAD,CAAtB,CAAR;AACA,GALD,CAKE,OAAOC,GAAP,EAAY;AACbP,IAAAA,QAAQ,CAACJ,oBAAoB,CAACW,GAAG,CAACC,OAAL,CAArB,CAAR;AACA;AACD,CATM;AAUP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAChD,MAAI;AACH,UAAMhB,IAAI,CAACyB,OAAL,EAAN;AACAT,IAAAA,QAAQ,CAACU,QAAQ,EAAT,CAAR;AACA,GAHD,CAGE,OAAOH,GAAP,EAAY;AACbI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,OAAhB;AACA;AACD,CAPM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {\n\tsignInWithGoogle,\n\tcreateUserProfileDocument,\n} from '../firebase/firebase.utils';\nimport { auth } from 'firebase';\n\nexport const userSlice = createSlice({\n\tname: 'user',\n\tinitialState: {\n\t\tcurrentUser: null,\n\t\terror: null,\n\t},\n\treducers: {\n\t\tSET_CURRENT_USER: (state, action) => {\n\t\t\tstate.currentUser = action.payload;\n\t\t},\n\t\tGOOGLE_SIGNIN_SUCCESS: (state, action) => {\n\t\t\tstate.currentUser = action.payload;\n\t\t\tstate.error = null;\n\t\t},\n\t\tGOOGLE_SIGNIN_FALURE: (state, action) => {\n\t\t\tstate.currentUser = null;\n\t\t\tstate.error = action.payload;\n\t\t},\n\t},\n});\nexport const {\n\tSET_CURRENT_USER,\n\tGOOGLE_SIGNIN_SUCCESS,\n\tGOOGLE_SIGNIN_FALURE,\n} = userSlice.actions;\nexport default userSlice.reducer;\n\nexport const googleSignin = () => async (dispatch) => {\n\ttry {\n\t\tconst { user } = await signInWithGoogle();\n\t\tconst docRef = await createUserProfileDocument(user);\n\t\tconst snap = await docRef.get();\n\t\tdispatch(GOOGLE_SIGNIN_SUCCESS({ id: snap.id, ...snap.data() }));\n\t} catch (err) {\n\t\tdispatch(GOOGLE_SIGNIN_FALURE(err.message));\n\t}\n};\nexport const signOut = () => async (dispatch) => {\n\ttry {\n\t\tawait auth.signOut();\n\t\tdispatch(SIGN_OUT());\n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}